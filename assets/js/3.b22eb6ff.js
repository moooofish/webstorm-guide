(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{340:function(a,t,s){a.exports=s.p+"assets/img/stash_01.ec5c8c42.png"},404:function(a,t,s){a.exports=s.p+"assets/img/git_clone.808bd906.png"},405:function(a,t,s){a.exports=s.p+"assets/img/view_branch.511d11bd.png"},406:function(a,t,s){a.exports=s.p+"assets/img/pull.3ee60003.png"},407:function(a,t,s){a.exports=s.p+"assets/img/update_lastet.90ec5464.png"},408:function(a,t,s){a.exports=s.p+"assets/img/create_branch_01.b4d978e2.png"},409:function(a,t,s){a.exports=s.p+"assets/img/create_branch_02.9b0a0089.png"},410:function(a,t,s){a.exports=s.p+"assets/img/git_commit_01.6fd6a9a5.png"},411:function(a,t,s){a.exports=s.p+"assets/img/git_commit_02.f5e358b1.png"},412:function(a,t,s){a.exports=s.p+"assets/img/git_push_01.fe9c8eda.png"},413:function(a,t,s){a.exports=s.p+"assets/img/select_branch_02.9cee0868.png"},414:function(a,t,s){a.exports=s.p+"assets/img/select_branch_01.1309673c.png"},415:function(a,t,s){a.exports=s.p+"assets/img/stash_02.c53d3989.png"},416:function(a,t,s){a.exports=s.p+"assets/img/stash_03.76e97ec7.png"},417:function(a,t,s){a.exports=s.p+"assets/img/git_unstash01.703beaab.png"},418:function(a,t,s){a.exports=s.p+"assets/img/git_unstash_02.0b8f25d1.png"},419:function(a,t,s){a.exports=s.p+"assets/img/rollback_01.84c6e7e2.png"},420:function(a,t,s){a.exports=s.p+"assets/img/rollback_02.fc05399f.png"},421:function(a,t,s){a.exports=s.p+"assets/img/rollback_03.57458b61.png"},422:function(a,t,s){a.exports=s.p+"assets/img/git_revert_01.67c4eb28.png"},423:function(a,t,s){a.exports=s.p+"assets/img/git_revert_02.0e47e6fa.png"},424:function(a,t,s){a.exports=s.p+"assets/img/git_rebase.26e9a1ba.png"},425:function(a,t,s){a.exports=s.p+"assets/img/git_rebase_02.6d52996e.png"},426:function(a,t,s){a.exports=s.p+"assets/img/file_status_colors.aae31c20.png"},427:function(a,t,s){a.exports=s.p+"assets/img/file_status_colors_02.617d8f1d.png"},490:function(a,t,s){"use strict";s.r(t);var _=s(16),v=Object(_.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"git-操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-操作"}},[a._v("#")]),a._v(" Git 操作")]),a._v(" "),t("h2",{attrs:{id:"克隆仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#克隆仓库"}},[a._v("#")]),a._v(" 克隆仓库")]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("VCS")]),a._v(" 按钮，可以看到 "),t("code",[a._v("Get from Version Control")]),a._v(" 弹框，如图所示")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git clone","data-src":s(404),loading:"lazy"}})]),a._v(" "),t("ul",[t("li",[a._v("在 URL 输入框输入需要克隆的仓库链接")]),a._v(" "),t("li",[a._v("在 Directory 选择克隆的仓库位置")])]),a._v(" "),t("h2",{attrs:{id:"查看分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看分支"}},[a._v("#")]),a._v(" 查看分支")]),a._v(" "),t("p",[a._v("在 WebStorm 的 "),t("code",[a._v("New UI")]),a._v("里，工具的"),t("strong",[a._v("左上角")]),a._v("直接显示当前分支名称")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"view branch name","data-src":s(405),loading:"lazy"}})]),a._v(" "),t("p",[a._v("如图所示，当前分支是 "),t("code",[a._v("main")]),a._v(" 分支")]),a._v(" "),t("h2",{attrs:{id:"更新分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新分支"}},[a._v("#")]),a._v(" 更新分支")]),a._v(" "),t("p",[a._v("当当前分支当远程分支有最新代码时，WebStorm 会提示有最新代码需要更新，如图所示")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"pull","data-src":s(406),loading:"lazy"}})]),a._v(" "),t("p",[a._v("在分支名的右边，有一个"),t("icons-BottomLeft"),a._v("的图标，提示开发人员更新最新的代码")],1),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"update lasted","data-src":s(407),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击分支下拉框、选择本地的当前分支、点击当前分支，会弹出一个提示框、选择 "),t("code",[a._v("Update")]),a._v(" 即可同步远程分支最新代码")]),a._v(" "),t("h2",{attrs:{id:"新建分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建分支"}},[a._v("#")]),a._v(" 新建分支")]),a._v(" "),t("p",[a._v("点击分支下拉框、会看到 git 相关操作弹框，如图所示")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"create branch01","data-src":s(408),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("+ New Branch")]),a._v("选项，会看到 "),t("code",[a._v("Create New Branch")]),a._v(" 弹框，输入分支名即可创建新分支")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"create branch02","data-src":s(409),loading:"lazy"}})]),a._v(" "),t("h2",{attrs:{id:"提交修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提交修改"}},[a._v("#")]),a._v(" 提交修改")]),a._v(" "),t("p",[a._v("当开发人员开发完功能时，可以使用 "),t("code",[a._v("command + 0")]),a._v(" 快捷键查看文件改动")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git commit","data-src":s(410),loading:"lazy"}})]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("command + k")]),a._v("，聚焦到 commit 编辑区")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git commit","data-src":s(411),loading:"lazy"}})]),a._v(" "),t("p",[a._v("开发人员直接在编辑区里输入准确的 commit 信息")]),a._v(" "),t("ul",[t("li",[a._v("点击 "),t("code",[a._v("Commit")]),a._v(" 按钮，即可将文件改动加入本地分支")]),a._v(" "),t("li",[a._v("点击 "),t("code",[a._v("Commit and Push...")]),a._v(" 按钮，文件改动加入本地分支并推送至远程分支")])]),a._v(" "),t("p",[a._v("如果开发人员在一个分支上执行多次 commit 操作，会留下多个 commit 记录，如果项目有要求保持干净 commit 记录\n可以再第二次的 commit 操作时，勾选上 "),t("code",[a._v("Amend")]),a._v(" 选项，相当于使用 "),t("code",[a._v("git commit --amend")]),a._v(" 命令，最后再强制提交，\n那么该分支将只会有一个 commit 记录")]),a._v(" "),t("h2",{attrs:{id:"压缩修改记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#压缩修改记录"}},[a._v("#")]),a._v(" 压缩修改记录")]),a._v(" "),t("p",[a._v("开发人员在一个 PR 上提交了多次修改，那么 "),t("code",[a._v("commit")]),a._v(" 的信息会有很多条。如果存在无意义的 "),t("code",[a._v("commit")]),a._v(",\n可以对无意义的 "),t("code",[a._v("commit")]),a._v(" 进行合并，使 "),t("code",[a._v("commit")]),a._v(" 清晰明了。压缩修改记录需要使用 "),t("code",[a._v("git rebase -i HEAD~n")])]),a._v(" "),t("h2",{attrs:{id:"提交分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提交分支"}},[a._v("#")]),a._v(" 提交分支")]),a._v(" "),t("p",[a._v("当完成改动加入本地分支操作后，如果选择点击 "),t("code",[a._v("Commit and Push...")]),a._v(" 按钮，文件改动加入本地分支并推送至远程分支")]),a._v(" "),t("p",[a._v("如果点击 "),t("code",[a._v("Commit")]),a._v(" 按钮，即可将文件改动加入本地分支，此时可以使用 "),t("code",[a._v("command + shift +k")]),a._v(" 快捷键")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git push","data-src":s(412),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("Push")]),a._v(" 按钮，即可将本地分支的改动同步到远程分支上")]),a._v(" "),t("h2",{attrs:{id:"删除分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[a._v("#")]),a._v(" 删除分支")]),a._v(" "),t("p",[a._v("点击分支下拉框，可以看到所有的本地分支和远程分支列表")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"delete branch02","data-src":s(413),loading:"lazy"}})]),a._v(" "),t("p",[a._v("选择要删除的本地分支/远程分支，如图所示以删除本地分支为例")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"delete branch02","data-src":s(414),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("delete")]),a._v(" 选项，即可删除本地分支")]),a._v(" "),t("h2",{attrs:{id:"贮藏改动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#贮藏改动"}},[a._v("#")]),a._v(" 贮藏改动")]),a._v(" "),t("p",[a._v("将鼠标移至内容编码区、点击鼠标右键")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git stash01","data-src":s(340),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("Git")]),a._v(" 选项、可以看到详细的操作列表")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git stash02","data-src":s(415),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("Stash Changes...")]),a._v(" 选项，可以看到 "),t("code",[a._v("Stash")]),a._v(" 弹框")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git stash03","data-src":s(416),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("Create Stash")]),a._v(" 按钮、即可创建一个 "),t("code",[a._v("Stash")])]),a._v(" "),t("p",[a._v("根据"),t("code",[a._v("新建分支")]),a._v("的指导，创建 "),t("code",[a._v("modify_Count_component")]),a._v(" 分支，对 "),t("code",[a._v("Stash")]),a._v(" 的内容在新分支上 "),t("code",[a._v("Unstash")])]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git unstash01","data-src":s(417),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("Unstash Changes...")]),a._v(" 选项")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git unstash02","data-src":s(418),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("Apply Stash")]),a._v(" 按钮，就将 "),t("code",[a._v("Stash")]),a._v(" 的内容移动到新分支上")]),a._v(" "),t("h2",{attrs:{id:"回滚修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回滚修改"}},[a._v("#")]),a._v(" 回滚修改")]),a._v(" "),t("h3",{attrs:{id:"文件回滚"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件回滚"}},[a._v("#")]),a._v(" 文件回滚")]),a._v(" "),t("p",[a._v("当开发人员需要放弃整个文件的改动、使用 "),t("code",[a._v("command + 0")]),a._v(" 快捷键，聚焦文件 "),t("code",[a._v("Changes")]),a._v(" 区域，选择指需要回滚的文件，")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"rollback","data-src":s(419),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击回滚的选项，会弹出 "),t("code",[a._v("Rollback Changes")]),a._v(" 窗口")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"rollback","data-src":s(420),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("Rollback")]),a._v(" 按钮，即可回滚选中的文件")]),a._v(" "),t("h3",{attrs:{id:"代码块回滚"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码块回滚"}},[a._v("#")]),a._v(" 代码块回滚")]),a._v(" "),t("p",[a._v("当开发人员需要放弃局部代码改动时，可以点击代码左侧当状态条，会显示操作弹框")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"rollback","data-src":s(421),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 "),t("code",[a._v("Rollback Lines")]),a._v(" 选项，即可回滚代码块")]),a._v(" "),t("h2",{attrs:{id:"撤销操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作"}},[a._v("#")]),a._v(" 撤销操作")]),a._v(" "),t("p",[t("code",[a._v("git revert")]),a._v(" 操作是将选择的某一次提交记录重做，若之后又有提交，提交记录还存在，只是将指定提交的代码给清除掉")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("command + 9")]),a._v(" 调出分支的 commit log， 如图所示")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git revert","data-src":s(422),loading:"lazy"}})]),a._v(" "),t("p",[a._v("选择要 revert 的 commit，点击鼠标右键，显示操作弹框")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git revert","data-src":s(423),loading:"lazy"}})]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("command + k")]),a._v(" 快捷键，直接提交修改到远程分支")]),a._v(" "),t("h2",{attrs:{id:"版本回退"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[a._v("#")]),a._v(" 版本回退")]),a._v(" "),t("p",[t("code",[a._v("git reset")]),a._v(" 重置 "),t("code",[a._v("HEAD")]),a._v(" 和指定提交之间的所有更改，根据传入的参数不同，处理结果如下")]),a._v(" "),t("h3",{attrs:{id:"mixed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mixed"}},[a._v("#")]),a._v(" mixed")]),a._v(" "),t("p",[t("code",[a._v("git reset --mixed")]),a._v(" 撤销 HEAD 和指定提交之间的所有更改，但会将更改保留在工作目录中，作为未暂存的更改。Git 默认会使用--mixed。")]),a._v(" "),t("h3",{attrs:{id:"soft"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#soft"}},[a._v("#")]),a._v(" soft")]),a._v(" "),t("p",[t("code",[a._v("git reset --soft")]),a._v(" 将 HEAD 移回指定的提交，撤消 HEAD 指向的位置和指定提交之间所做的所有更改，并将所有更改保存在索引中。换句话说，Git 会重新添加暂存的更改，准备再次提交。")]),a._v(" "),t("h3",{attrs:{id:"hard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hard"}},[a._v("#")]),a._v(" hard")]),a._v(" "),t("p",[t("code",[a._v("git reset --hard")]),a._v(" 会自动丢弃 HEAD 和指定提交之间的所有更改。所以要慎用。")]),a._v(" "),t("h3",{attrs:{id:"keep"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keep"}},[a._v("#")]),a._v(" keep")]),a._v(" "),t("h2",{attrs:{id:"创建、删除标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建、删除标签"}},[a._v("#")]),a._v(" 创建、删除标签")]),a._v(" "),t("p",[a._v("在内容编辑区里，点击鼠标右键，显示操作上下文")]),a._v(" "),t("p",[a._v("点击 Git 选项，显示 Git 功能菜单")]),a._v(" "),t("p",[a._v("选择 "),t("code",[a._v("New Tag...")]),a._v(" 选项，即可创建标签")]),a._v(" "),t("h2",{attrs:{id:"分支变基"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支变基"}},[a._v("#")]),a._v(" 分支变基")]),a._v(" "),t("p",[a._v("在内容编辑区里，点击鼠标右键，显示操作上下文操作")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git stash01","data-src":s(340),loading:"lazy"}})]),a._v(" "),t("p",[a._v("点击 Git 选项，显示 Git 功能菜单")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git rebase","data-src":s(424),loading:"lazy"}})]),a._v(" "),t("p",[a._v("选择 "),t("code",[a._v("Rebase...")]),a._v("选项，弹出 Rebase 操作窗口")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"git rebase","data-src":s(425),loading:"lazy"}})]),a._v(" "),t("p",[a._v("选择需要 "),t("code",[a._v("rebase")]),a._v(" 的分支，点击确认按钮即可实现分支变基")]),a._v(" "),t("h2",{attrs:{id:"解决冲突"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突"}},[a._v("#")]),a._v(" 解决冲突")]),a._v(" "),t("p",[a._v("当开发人员使用分支变基的功能时，可能会出现代码合并冲突。WebStorm 提供了非常棒地可视化解决冲突的功能")]),a._v(" "),t("h2",{attrs:{id:"择优挑选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#择优挑选"}},[a._v("#")]),a._v(" 择优挑选")]),a._v(" "),t("p",[a._v("择优挑选即 "),t("code",[a._v("git cherry-pick")]),a._v(" 操作，选择将现有的一个或者多个提交的修改引入当前内容")]),a._v(" "),t("h2",{attrs:{id:"文件状态颜色"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件状态颜色"}},[a._v("#")]),a._v(" 文件状态颜色")]),a._v(" "),t("p",[a._v("WebStorm 内置文件各种操作后的颜色状态，如下图所示")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"File Status Colors","data-src":s(426),loading:"lazy"}})]),a._v(" "),t("p",[a._v("从图中可以看出，文件状态颜色的种类很多，开发人员只需要重点记住以下文件状态")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("added")]),a._v(" 表示新增文件")]),a._v(" "),t("li",[t("code",[a._v("modified")]),a._v(" 表示文件被修改")]),a._v(" "),t("li",[t("code",[a._v("deleted")]),a._v(" 表示该文件被删除")]),a._v(" "),t("li",[t("code",[a._v("renamed")]),a._v(" 表示文件重命名")])]),a._v(" "),t("p",[a._v("还可以通过勾选 "),t("code",[a._v("Changes")]),a._v(" 查看文件改动类型，如下图所示")]),a._v(" "),t("p",[t("img",{staticClass:"lazy",attrs:{alt:"File Status Colors","data-src":s(427),loading:"lazy"}})]),a._v(" "),t("p",[a._v("上图的右下角显示文件改动类型")])])}),[],!1,null,null,null);t.default=v.exports}}]);